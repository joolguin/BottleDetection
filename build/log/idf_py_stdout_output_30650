[1/10] Performing build step for 'bootloader'
[1/1] cd /Users/jose/esp/projects_tf/bottle_detection/build/bootloader/esp-idf/esptool_py && /Users/jose/esp/idf-tools/python_env/idf5.4_py3.12_env/bin/python /Users/jose/esp/idf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /Users/jose/esp/projects_tf/bottle_detection/build/bootloader/bootloader.bin
Bootloader binary size 0x6f50 bytes. 0xb0 bytes (1%) free.
[2/10] No install step for 'bootloader'
[3/10] Completed 'bootloader'
[4/10] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/person_detect_model_data.cc.obj
[5/10] Linking C static library esp-idf/main/libmain.a
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable person_detection.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.dev4
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /Users/jose/esp/projects_tf/bottle_detection/build/person_detection.bin
[9/10] cd /Users/jose/esp/projects_tf/bottle_detection/build/esp-idf/esptool_py && /Users/jose/esp/idf-tools/python_env/idf5.4_py3.12_env/bin/python /Users/jose/esp/idf/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /Users/jose/esp/projects_tf/bottle_detection/build/partition_table/partition-table.bin /Users/jose/esp/projects_tf/bottle_detection/build/person_detection.bin
person_detection.bin binary size 0x68840 bytes. Smallest app partition is 0x180000 bytes. 0x1177c0 bytes (73%) free.
[9/10] cd /Users/jose/esp/idf/esp-idf/components/esptool_py && /usr/local/Cellar/cmake/3.29.3/bin/cmake -D IDF_PATH=/Users/jose/esp/idf/esp-idf -D "SERIAL_TOOL=/Users/jose/esp/idf-tools/python_env/idf5.4_py3.12_env/bin/python;;/Users/jose/esp/idf/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/Users/jose/esp/projects_tf/bottle_detection/build -P /Users/jose/esp/idf/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/cu.usbserial-14430 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size 4MB 0x1000 bootloader/bootloader.bin 0x10000 person_detection.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.dev4
Serial port /dev/cu.usbserial-14430
Connecting.....
Chip is ESP32-D0WD (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: c4:de:e2:5c:cc:84
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00078fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 28496 bytes to 17357...
Writing at 0x00001000... (50 %)
Writing at 0x00007a45... (100 %)
Wrote 28496 bytes (17357 compressed) at 0x00001000 in 0.6 seconds (effective 383.2 kbit/s)...
Hash of data verified.
Compressed 428096 bytes to 261183...
Writing at 0x00010000... (6 %)
Writing at 0x0001d8e4... (12 %)
Writing at 0x00023a10... (18 %)
Writing at 0x0002c53e... (25 %)
Writing at 0x000321b0... (31 %)
Writing at 0x0003752e... (37 %)
Writing at 0x0003d0ab... (43 %)
Writing at 0x00042544... (50 %)
Writing at 0x0004750d... (56 %)
Writing at 0x0004c96b... (62 %)
Writing at 0x00051b5c... (68 %)
Writing at 0x00058331... (75 %)
Writing at 0x0005e846... (81 %)
Writing at 0x00065f41... (87 %)
Writing at 0x0006d6ae... (93 %)
Writing at 0x00072e51... (100 %)
Wrote 428096 bytes (261183 compressed) at 0x00010000 in 6.6 seconds (effective 516.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 105...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (105 compressed) at 0x00008000 in 0.0 seconds (effective 831.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
